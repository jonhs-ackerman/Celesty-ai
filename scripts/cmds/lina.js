const axios = require("axios");

module.exports = {
  config: {
    name: 'lina',
    aliases: ['loft'],
    version: '1.2',
    author: 'Luxion / Fixed by Riley / Rudeus',
    countDown: 0,
    role: 0,
    shortDescription: 'AI Chat',
    longDescription: {
      en: 'Chat avec Lina en mode rude'
    },
    category: 'Ai chat',
    guide: {
      en: '{pn} on/off : active ou d√©sactive Lina\n{pn} <message> : parle avec Lina\nEx : {pn} salut'
    }
  },

  langs: {
    en: {
      turnedOn: 'ùòÜùóº ùó∂ùó∞ùó∂ ùó∞ùó≤ùóπùó≤ùòÄùòÅùòÜ üòêüñ§ü•É, tu veux clash ?‚ÅâÔ∏è\nùó∑ùó≤ ùòÉùóÆùó∂ùòÄ ùòÉùóºùòÇùòÄ ùó∞ùóπùóÆùòÄùóµùó≤ùóø ùó±ùóÆùóªùòÄ ùó∞ùó≤ ùó¥ùóøùóºùòÇùóΩùó≤ ùó±ùó≤ ùó∫ùó≤ùóøùó±ùó∂ùó≤ùóø\n\nùóøùó≤ùó¥ùóπùó≤ùòÄ ùóª0 1 : ùóºùóª ùóΩùóπùó≤ùòÇùóøùó≤ùòÄ ùóΩùóÆùòÄ ùóµùó≤ùó∂ùóª ü•Éüñ§',
      turnedOff: 'ùó¥ùóøùóºùòÄ ùó∞ùóºùóª...\n ùòÅùòÇ ùóÆùòÄ ùòÅùóøùóºùóΩ ùóΩùó≤ùòÇùóø ùó∑ùòÇùòÄùóæùòÇ'ùóÆ ùòÅùòÇ ùó∫ùó≤ ùó∫ùó≤ùòÅ ùóºùó≥ùó≥ùó≥ üñïüñïüñï\n \n ùó≤ùòÄùóΩùó≤ùó∞ùó≤ ùó±ùó≤ ùóØùóÆùó∏ùóÆ ü•Éüñ§',
      chatting: 'D√©j√† en train de discuter avec LOFT...',
      error: 'ùó¥ùóøùóºùòÄ...ùó∞ùóºùóª... üòêü•É'
    }
  },

  onStart: async function ({ args, threadsData, message, event, getLang }) {
    const settingPath = "settings.simsimi";

    if (args[0] === "on" || args[0] === "off") {
      await threadsData.set(event.threadID, args[0] === "on", settingPath);
      return message.reply(args[0] === "on" ? getLang("turnedOn") : getLang("turnedOff"));
    }

    if (args.length > 0) {
      try {
        const response = await getMessage(args.join(" "));
        return message.reply(response);
      } catch (err) {
        console.log(err);
        return message.reply(getLang("error"));
      }
    }
  },

  onChat: async ({ args, message, threadsData, event, isUserCallCommand, getLang }) => {
    const simsimiOn = await threadsData.get(event.threadID, "settings.simsimi");
    if (args.length > 0 && !isUserCallCommand && simsimiOn) {
      try {
        const response = await getMessage(args.join(" "));
        return message.reply(response);
      } catch (err) {
        console.log(err);
        return message.reply(getLang("error"));
      }
    }
  }
};

async function getMessage(text) {
  const res = await axios.post(
    'https://api.simsimi.vn/v1/simtalk',
    new URLSearchParams({ text, lc: 'fr' })
  );

  if (!res.data || !res.data.message) throw new Error("Aucune r√©ponse");

  return res.data.message;
}